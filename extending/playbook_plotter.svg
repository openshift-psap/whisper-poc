<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 --><!-- Title: %3 Pages: 1 --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="1976pt" height="229pt" viewBox="0.00 0.00 1976.16 229.00" id="svg">
<script type="text/javascript" href="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js" id="jquery"/><script type="text/javascript" id="my_javascript"><![CDATA[/**
 * This file contains the functions responsible to highlight the plays, roles and tasks when rendering the SVG file in a browser
 * or any SVG reader that support JavaScript.
 */

/**
 * The name of the CSS class for highlighted elements
 * @type {string}
 */
const HIGHLIGHT_CLASS = "highlight";

/**
 * The current selected element on the graph
 * @type {null}
 */
let currentSelectedElement = null;

/**
 * Highlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 */
function highlightLinkedNodes(parentElement, visitedElements = []) {
    $(parentElement).find('link').each(function (index, element) {
        const linkedElementId = $(element).attr('target');
        const edgeId = $(element).attr('edge');

        const currentElement = $(`#${linkedElementId}`);
        currentElement.addClass(HIGHLIGHT_CLASS);

        // Highlight the edge point to the target
        $(`#${edgeId}`).addClass(HIGHLIGHT_CLASS);

        if (!visitedElements.includes(linkedElementId)) {
            visitedElements.push(linkedElementId);
            // Recursively highlight
            highlightLinkedNodes(currentElement, visitedElements);
        }
    })
}


/**
 * Unhighlight the linked nodes of the given root element
 * @param {Element} parentElement
 * @param {string[]} visitedElements
 * @param {boolean} isHover True when we are coming from a mouseleave event. In that case, we should not unhighlight if
 * the parentElement is the current selected element
 */
function unHighlightLinkedNodes(parentElement, visitedElements = [], isHover) {
    const currentSelectedElementId = $(currentSelectedElement).attr('id');
    // Do not unhighlight the current selected element
    if ($(parentElement).attr('id') !== currentSelectedElementId || !isHover) {

        $(parentElement).find('link').each(function (index, element) {
            const linkedElementId = $(element).attr('target');
            const edgeId = $(element).attr('edge');

            const linkedElement = $(`#${linkedElementId}`);

            if (linkedElement.attr('id') !== currentSelectedElementId) {
                linkedElement.removeClass(HIGHLIGHT_CLASS);

                // Unhighlight the edge point to the target
                $(`#${edgeId}`).removeClass(HIGHLIGHT_CLASS);

                if (!visitedElements.includes(linkedElementId)) {
                    visitedElements.push(linkedElementId);
                    // Recursively unhighlight
                    unHighlightLinkedNodes(linkedElement, visitedElements, isHover);
                }
            }

        })
    }

}

/**
 * Hover handler for mouseenter event
 * @param {Event} event
 */
function hoverMouseEnter(event) {
    highlightLinkedNodes(event.currentTarget, []);
}

/**
 * Hover handler for mouseleave event
 * @param {Event} event
 */
function hoverMouseLeave(event) {
    unHighlightLinkedNodes(event.currentTarget, [], true);
}

/**
 * Handler when clicking on some elements
 * @param {Event} event
 */
function clickOnElement(event) {
    const newClickedElement = $(event.currentTarget);

    event.preventDefault(); // Disable the default click behavior since we override it here

    if (newClickedElement.attr('id') === $(currentSelectedElement).attr('id')) { // clicking again on the same element
        newClickedElement.removeClass(HIGHLIGHT_CLASS);
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        currentSelectedElement = null;
    } else { // clicking on a different node

        // Remove highlight from all the nodes linked to the current selected node
        unHighlightLinkedNodes(currentSelectedElement, [], false);
        if (currentSelectedElement) {
            currentSelectedElement.removeClass(HIGHLIGHT_CLASS);
        }

        newClickedElement.addClass(HIGHLIGHT_CLASS);
        highlightLinkedNodes(newClickedElement, []);
        currentSelectedElement = newClickedElement;
    }
}

/**
 * Handler when double clicking on some elements
 * @param {Event} event
 */
function dblClickElement(event) {
    const newElementDlbClicked = event.currentTarget;
    const links = $(newElementDlbClicked).find("a[xlink\\:href]");

    if (links.length > 0) {
        document.location = $(links[0]).attr("xlink:href");
    } else {
        console.log("No links found on this element");
    }
}


$("#svg").ready(function () {
    let playbooks = $("g[id^=playbook_]");
    let plays = $("g[id^=play_]");
    let roles = $("g[id^=role_]");
    let blocks = $("g[id^=block_]");
    let tasks = $("g[id^=pre_task_], g[id^=task_], g[id^=post_task_], g[id^=handler_]");

    playbooks.hover(hoverMouseEnter, hoverMouseLeave);
    playbooks.click(clickOnElement);
    playbooks.dblclick(dblClickElement);

    // Set hover and click events on the plays
    plays.hover(hoverMouseEnter, hoverMouseLeave);
    plays.click(clickOnElement);
    plays.dblclick(dblClickElement);

    // Set hover and click events on the roles
    roles.hover(hoverMouseEnter, hoverMouseLeave);
    roles.click(clickOnElement);
    roles.dblclick(dblClickElement);

    // Set hover and click events on the blocks
    blocks.hover(hoverMouseEnter, hoverMouseLeave);
    blocks.click(clickOnElement);
    blocks.dblclick(dblClickElement);

    // Set hover and click events on the tasks
    tasks.hover(hoverMouseEnter, hoverMouseLeave);
    tasks.click(clickOnElement);
    tasks.dblclick(dblClickElement);

});
]]></script><style type="text/css" id="my_css"><![CDATA[/**
 Hover on nodes, edges, path and polygon
 */
.node:hover, .edge:hover, path:hover, path + polygon:hover {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}

/**
 Manually added class by the script highlight-hover.js when hovering on plays and roles
 */
.highlight {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}
]]></style><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 225)">
<title>%3</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-225 1972.16,-225 1972.16,4 -4,4"/>
<text text-anchor="middle" x="984.08" y="-205.8" font-family="Times,serif" font-size="14.00">Ansible Playbook Grapher</text>
<!-- playbook_61e567d5 -->
<g id="playbook_61e567d5" class="node">
<title>playbook_61e567d5</title>
<g id="a_playbook_61e567d5"><a xlink:href="/home/runner/work/whisper-poc/whisper-poc/psap/topsail/playbook_plotter.yml" xlink:title="playbook_plotter.yml">
<ellipse fill="none" stroke="black" stroke-dasharray="1,5" cx="107.24" cy="-99" rx="107.48" ry="18"/>
<text text-anchor="middle" x="107.24" y="-95.3" font-family="Times,serif" font-size="14.00">playbook_plotter.yml</text>
</a>
</g>
<links><link target="play_20bc9203" edge="edge_playbook_61e567d5-play_20bc9203"/></links></g>
<!-- play_20bc9203 -->
<g id="play_20bc9203" class="node">
<title>play_20bc9203</title>
<g id="a_play_20bc9203"><a xlink:href="/home/runner/work/whisper-poc/whisper-poc/psap/topsail/playbook_plotter.yml" xlink:title="localhost">
<polygon fill="#1cb026" stroke="#1cb026" points="777.48,-117 260.48,-117 260.48,-81 777.48,-81 777.48,-117"/>
<text text-anchor="middle" x="518.98" y="-95.3" font-family="Times,serif" font-size="14.00" fill="#ffffff">play #1 (Run the plotter role from the default tasks file (main.yml)): 1</text>
</a>
</g>
<links><link target="role_252011a8" edge="edge_play_20bc9203-role_252011a8"/></links></g>
<!-- playbook_61e567d5&#45;&gt;play_20bc9203 -->
<g id="edge_playbook_61e567d5-play_20bc9203" class="edge">
<title>playbook_61e567d5-&gt;play_20bc9203</title>
<g id="a_edge_playbook_61e567d5-play_20bc9203"><a xlink:title="1">
<path fill="none" stroke="#1cb026" d="M214.56,-99C225.86,-99 237.68,-99 249.84,-99" id="path_edge_playbook_61e567d5-play_20bc9203"/>
<polygon fill="#1cb026" stroke="#1cb026" points="250.12,-102.5 260.12,-99 250.12,-95.5 250.12,-102.5"/>
</a>
</g>
<g id="a_edge_playbook_61e567d5-play_20bc9203-label"><a xlink:title="1">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#1cb026" dy="-0.2%"><textPath xlink:href="#path_edge_playbook_61e567d5-play_20bc9203" startOffset="25.812800000000003">1</textPath></text>
</a>
</g>
</g>
<!-- role_252011a8 -->
<g id="role_252011a8" class="node">
<title>role_252011a8</title>
<g id="a_role_252011a8"><a xlink:href="/home/runner/.ansible/collections/ansible_collections/psap/topsail/roles/plotter" xlink:title="psap.topsail.plotter">
<ellipse fill="#1cb026" stroke="#1cb026" cx="956.82" cy="-99" rx="129.18" ry="18"/>
<text text-anchor="middle" x="956.82" y="-95.3" font-family="Times,serif" font-size="14.00" fill="#ffffff">[role] psap.topsail.plotter</text>
</a>
</g>
<links><link target="task_f21990a5" edge="edge_role_252011a8-task_f21990a5"/><link target="task_983190d3" edge="edge_role_252011a8-task_983190d3"/><link target="task_b0a1f283" edge="edge_role_252011a8-task_b0a1f283"/><link target="task_838bb545" edge="edge_role_252011a8-task_838bb545"/></links></g>
<!-- play_20bc9203&#45;&gt;role_252011a8 -->
<g id="edge_play_20bc9203-role_252011a8" class="edge">
<title>play_20bc9203-&gt;role_252011a8</title>
<g id="a_edge_play_20bc9203-role_252011a8"><a xlink:title="1 ">
<path fill="none" stroke="#1cb026" d="M777.6,-99C791.04,-99 804.26,-99 817.07,-99" id="path_edge_play_20bc9203-role_252011a8"/>
<polygon fill="#1cb026" stroke="#1cb026" points="817.24,-102.5 827.24,-99 817.24,-95.5 817.24,-102.5"/>
</a>
</g>
<g id="a_edge_play_20bc9203-role_252011a8-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#1cb026" dy="-0.2%"><textPath xlink:href="#path_edge_play_20bc9203-role_252011a8" startOffset="27.99720000000002">1 </textPath></text>
</a>
</g>
</g>
<!-- task_f21990a5 -->
<g id="task_f21990a5" class="node">
<title>task_f21990a5</title>
<g id="a_task_f21990a5"><a xlink:href="/home/runner/.ansible/collections/ansible_collections/psap/topsail/roles/plotter/tasks/main.yml" xlink:title="psap.topsail.plotter : main: Ensure Python and required packages are installed">
<polygon fill="none" stroke="#1cb026" points="1968.16,-198 1387.16,-198 1387.16,-162 1968.16,-162 1968.16,-198"/>
<text text-anchor="middle" x="1677.66" y="-176.3" font-family="Times,serif" font-size="14.00">psap.topsail.plotter : main: Ensure Python and required packages are installed</text>
</a>
</g>
</g>
<!-- role_252011a8&#45;&gt;task_f21990a5 -->
<g id="edge_role_252011a8-task_f21990a5" class="edge">
<title>role_252011a8-&gt;task_f21990a5</title>
<g id="a_edge_role_252011a8-task_f21990a5"><a xlink:title="1 ">
<path fill="none" stroke="#1cb026" d="M1017.59,-114.97C1043.96,-121.48 1075.42,-128.51 1104.16,-133 1192.27,-146.78 1288.69,-156.66 1376.85,-163.7" id="path_edge_role_252011a8-task_f21990a5"/>
<polygon fill="#1cb026" stroke="#1cb026" points="1376.76,-167.2 1387.01,-164.5 1377.31,-160.22 1376.76,-167.2"/>
</a>
</g>
<g id="a_edge_role_252011a8-task_f21990a5-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#1cb026" dy="-0.2%"><textPath xlink:href="#path_edge_role_252011a8-task_f21990a5" startOffset="273.8266516414775">1 </textPath></text>
</a>
</g>
</g>
<!-- task_983190d3 -->
<g id="task_983190d3" class="node">
<title>task_983190d3</title>
<g id="a_task_983190d3"><a xlink:href="/home/runner/.ansible/collections/ansible_collections/psap/topsail/roles/plotter/tasks/main.yml" xlink:title="psap.topsail.plotter : main: Ensure the CSV file exists">
<polygon fill="none" stroke="#1cb026" points="1877.66,-144 1477.66,-144 1477.66,-108 1877.66,-108 1877.66,-144"/>
<text text-anchor="middle" x="1677.66" y="-122.3" font-family="Times,serif" font-size="14.00">psap.topsail.plotter : main: Ensure the CSV file exists</text>
</a>
</g>
</g>
<!-- role_252011a8&#45;&gt;task_983190d3 -->
<g id="edge_role_252011a8-task_983190d3" class="edge">
<title>role_252011a8-&gt;task_983190d3</title>
<g id="a_edge_role_252011a8-task_983190d3"><a xlink:title="2 ">
<path fill="none" stroke="#1cb026" d="M1081.8,-103.66C1187.68,-107.63 1342.22,-113.44 1467.24,-118.13" id="path_edge_role_252011a8-task_983190d3"/>
<polygon fill="#1cb026" stroke="#1cb026" points="1467.21,-121.64 1477.34,-118.51 1467.47,-114.64 1467.21,-121.64"/>
</a>
</g>
<g id="a_edge_role_252011a8-task_983190d3-label"><a xlink:title="2 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#1cb026" dy="-0.2%"><textPath xlink:href="#path_edge_role_252011a8-task_983190d3" startOffset="291.1407531054159">2 </textPath></text>
</a>
</g>
</g>
<!-- task_b0a1f283 -->
<g id="task_b0a1f283" class="node">
<title>task_b0a1f283</title>
<g id="a_task_b0a1f283"><a xlink:href="/home/runner/.ansible/collections/ansible_collections/psap/topsail/roles/plotter/tasks/main.yml" xlink:title="psap.topsail.plotter : main: Fail if CSV file is not found">
<polygon fill="none" stroke="#1cb026" points="1879.66,-90 1475.66,-90 1475.66,-54 1879.66,-54 1879.66,-90"/>
<text text-anchor="middle" x="1677.66" y="-68.3" font-family="Times,serif" font-size="14.00">psap.topsail.plotter : main: Fail if CSV file is not found</text>
</a>
</g>
</g>
<!-- role_252011a8&#45;&gt;task_b0a1f283 -->
<g id="edge_role_252011a8-task_b0a1f283" class="edge">
<title>role_252011a8-&gt;task_b0a1f283</title>
<g id="a_edge_role_252011a8-task_b0a1f283"><a xlink:title="3 [when: not csv_file_stat.stat.exists]">
<path fill="none" stroke="#1cb026" d="M1060.49,-88.23C1075.13,-86.97 1090.02,-85.84 1104.16,-85 1223.62,-77.94 1357.3,-74.64 1465.43,-73.13" id="path_edge_role_252011a8-task_b0a1f283"/>
<polygon fill="#1cb026" stroke="#1cb026" points="1465.53,-76.63 1475.48,-73 1465.44,-69.63 1465.53,-76.63"/>
</a>
</g>
<g id="a_edge_role_252011a8-task_b0a1f283-label"><a xlink:title="3 [when: not csv_file_stat.stat.exists]">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#1cb026" dy="-0.2%"><textPath xlink:href="#path_edge_role_252011a8-task_b0a1f283" startOffset="269.01619053473746">3 [when: not csv_file_stat.stat.exists]</textPath></text>
</a>
</g>
</g>
<!-- task_838bb545 -->
<g id="task_838bb545" class="node">
<title>task_838bb545</title>
<g id="a_task_838bb545"><a xlink:href="/home/runner/.ansible/collections/ansible_collections/psap/topsail/roles/plotter/tasks/main.yml" xlink:title="psap.topsail.plotter : main: Use custom plot module">
<polygon fill="none" stroke="#1cb026" points="1871.16,-36 1484.16,-36 1484.16,0 1871.16,0 1871.16,-36"/>
<text text-anchor="middle" x="1677.66" y="-14.3" font-family="Times,serif" font-size="14.00">psap.topsail.plotter : main: Use custom plot module</text>
</a>
</g>
</g>
<!-- role_252011a8&#45;&gt;task_838bb545 -->
<g id="edge_role_252011a8-task_838bb545" class="edge">
<title>role_252011a8-&gt;task_838bb545</title>
<g id="a_edge_role_252011a8-task_838bb545"><a xlink:title="4 ">
<path fill="none" stroke="#1cb026" d="M1004.97,-82.28C1033.34,-72.94 1070.4,-62.01 1104.16,-56 1225.65,-34.39 1363.62,-24.8 1473.68,-20.65" id="path_edge_role_252011a8-task_838bb545"/>
<polygon fill="#1cb026" stroke="#1cb026" points="1474.04,-24.14 1483.9,-20.28 1473.78,-17.14 1474.04,-24.14"/>
</a>
</g>
<g id="a_edge_role_252011a8-task_838bb545-label"><a xlink:title="4 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#1cb026" dy="-0.2%"><textPath xlink:href="#path_edge_role_252011a8-task_838bb545" startOffset="358.3772986727049">4 </textPath></text>
</a>
</g>
</g>
</g>
</svg>